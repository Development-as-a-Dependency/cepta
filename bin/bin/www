const chalk = require('chalk');
const dotenv = require('dotenv');
const http = require('http');
const debug = require('debug')('test:server');
const { settings } = require('../settings.json');

dotenv.config();

// Initialization Log
console.log(chalk.green(`${settings.prefix} Server Loading...`));

const app = require('../app');

const DEFAULT_PORT = '1945';
const port = normalizePort(process.env.PORT || DEFAULT_PORT);
const server = http.createServer(app);

server.listen(port);
server.on('error', handleServerError);
server.on('listening', handleServerListening);

function normalizePort(val) {
  const parsedPort = parseInt(val, 10);

  if (isNaN(parsedPort)) return val; // Named pipe
  if (parsedPort >= 0) return parsedPort; // Port number

  return false;
}

function handleServerError(error) {
  if (error.syscall !== 'listen') throw error;

  const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function handleServerListening() {
  console.log(
    chalk.green(`${settings.prefix} Server Listening on ${process.env.BASE_URL || 'http://localhost' + ':' + port}`)
  );
}

// Loaded Log
console.log(chalk.green(`${settings.prefix} Server Loaded.`));
